# Aggregation methods for whisper files. Entries are scanned in order,
# and first match wins. This file is scanned for changes every 60 seconds
#
#  [name]
#  pattern = <regex>
#  xFilesFactor = <float between 0 and 1>
#  aggregationMethod = <average|sum|last|max|min>
#
#  name: Arbitrary unique name for the rule
#  pattern: Regex pattern to match against the metric name
#  xFilesFactor: Ratio of valid data points required for aggregation to the next retention to occur
#  aggregationMethod: function to apply to data points for aggregation
#
[min]
pattern = \.lower$
xFilesFactor = 0.1
aggregationMethod = min

[max]
pattern = \.upper(_\d+)?$
xFilesFactor = 0.1
aggregationMethod = max

[sum]
pattern = \.sum$
xFilesFactor = 0
aggregationMethod = sum

[count]
pattern = \.count$
xFilesFactor = 0
aggregationMethod = sum

[count_legacy]
pattern = ^stats_counts.*
xFilesFactor = 0
aggregationMethod = sum

[default_average]
pattern = .*
xFilesFactor = 0.3
aggregationMethod = average



#  --- NAV --- begin

# Recommended Whisper aggregation methods for using Graphite with NAV.
#
# https://nav.uninett.no/doc/5.0/howto/integrating-graphite-with-nav.html#configuring-graphite
#
# If you already have a Graphite installation you wish to use, use these
# examples to adapt your own config.
#

# ipdevpoll jobs don't necesarily run very often; an xFilesFactor of 0 ensures
# we roll up everything into the lower precision archives no matter how often
# runs are logged.
[nav_ipdevpoll]
pattern = ^nav\..*\.ipdevpoll\..*runtime$
xFilesFactor = 0
aggregationMethod = average

# Any kind of event counter NAV uses will log the number of events since the
# last time the metric was logged, so the approprate aggregation is to sum the
# counts.
[na_event_counts]
pattern = ^nav\..*-count$
xFilesFactor = 0
aggregationMethod = sum

# NAV stores the raw octet/packet/error/etc counters of interfaces in Graphite.
# Since these counter values are absolute, and the rates are calculated using
# the difference of the port counter and the time difference between two
# counter numbers, the appropriate aggregation method would be to picke the
# last counter value when rolling up.
[nav_port_counters]
pattern = ^nav\..*ports\..*
xFilesFactor = 0.5
aggregationMethod = last

#  --- NAV --- end
