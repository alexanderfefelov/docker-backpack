#
# Configuration file for the report generator
#

#
# - Variables starts with '$', and comments with '#'.
# - Values must be within double quates (") and lines must end with a semicolon (;).
# - $sql is the sql-query. Line break and white space is allowed.
# - $order_by defines the default ordering of the sql query. By clicking on the
#     column headers in the report, you can sort/reverse sort on other criteria.
# - $title ($overskrift) is the report title as shown on web.
# - $extra ($ekstra) are extra columns that can be used for hyperlinks (see $url).
# - $hide ($skjul) are columns that must be included in the $sql because they
#     are used in a $url, see below. $hide will not show the column in the report.
# - $sum shows the total of a given column (may not work...).
# - $count angir kolonner som skal telles.
# - $name_MYCOL ($navn_MYCOL) changes the column header.
# - $url_MYCOL makes a hyperlink
# - $explain_MYCOL ($forklar_MYCOL) shows an explaination as popup in the
#     browser when you hold the curser over the column header.
# - $description is the descriptive summary of what the report shows.
#
# (hstore) If you want to output a foobar column containing the values of the foobar data key,
# use this syntax:
#     data->'foobar' as foobar
#

netbox {
    $title = "Devices in operation"
    $description = "An overview of all IP devices"

    $sql = "
        with chassis as (
            select netboxid,
                   string_agg(distinct serial, ', ') as serials,
                   string_agg(distinct sw_ver, ', ') as sw_vers
            from netboxentity ne
                     join device d using (deviceid)
            where physical_class = 3
            group by netboxid
        ),
             softwares as (
                 select netboxid,
                        string_agg(distinct software_revision, ', ') as software
                 from netboxentity
                 where coalesce(software_revision, '') <> ''
                 group by netboxid
             )
        select orgid,
               roomid,
               sysname,
               ip,
               catid,
               sub,
               typeid,
               typename,
               vendorid,
               netbox.up,
               modules,
               swport,
               gwport,
               prefixcount,
               case when coalesce(sw_vers, '') <> '' then sw_vers else software end as software,
               serials,
               val as function,
               netboxprefix.prefixid,
               netbox.netboxid
        from type
                 right outer join netbox using (typeid)
                 left join netboxprefix using (netboxid)
                 left join (select netboxid, count(distinct interfaceid) as gwport, count(prefixid) as prefixcount
                            from interface
                                     join gwportprefix using (interfaceid)
                            group by netboxid) tempaggr1 using (netboxid)
                 left join (select netboxid, count(interfaceid) as swport
                            from interface_swport
                            group by netboxid) tempaggr2 using (netboxid)
                 left join (select netboxid, count(netboxid) as modules
                            from module
                            group by netboxid) tempaggr3 using (netboxid)
                 left join (select netboxid, count(netboxid) as sub
                            from netboxcategory
                            group by netboxid) tempaggr4 using (netboxid)
                 left join chassis using (netboxid)
                 left join softwares using (netboxid)
                 left join netboxinfo on (netbox.netboxid = netboxinfo.netboxid and var = 'function')
    "

    $hide = "prefixid,typeid,vendorid"

    $name_catid = "Category"
    $name_function = "Function"
    $name_gwport = "Router ports"
    $name_ip = "IP address"
    $name_modules = "Modules"
    $name_netboxid = "ID"
    $name_orgid = "Organization"
    $name_prefixcount = "Prefixes"
    $name_roomid = "Room"
    $name_serials = "Chassis"
    $name_software = "Software"
    $name_sub = "Groups"
    $name_swport = "Switch ports"
    $name_sysname = "Sysname"
    $name_typename = "Type"
    $name_up = "Up"

    $order_by = "roomid"

    $sum = "swport"

    $url_catid = "/report/netbox?catid=$catid"
    $url_function = "/report/netbox?function=$function"
    $url_gwport = "/report/gwport?netboxid=$netboxid"
    $url_modules = "/report/modules?sysname=$sysname"
    $url_orgid = "/report/org?orgid=$orgid"
    $url_prefixcount = "/report/gwip?sysname=$sysname"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_sub = "/report/netboxinfo?netboxid=$netboxid"
    $url_swport = "/report/swport?netboxid=$netboxid"
    $url_sysname = "/ipdevinfo/$sysname"
    $url_typename = "/report/type?typeid=$typeid"
    $url_up = "/devicehistory/history/?netbox=$netboxid"
}

netboxinfo {
    $title = "Device groups"
    $description = "Simple info about a netbox"

    $sql = "
        select roomid, sysname, catid, category, netboxid
        from netbox
                 left join netboxcategory using (netboxid)
    "

    $name_category = "Group"
    $name_catid = "Category"
    $name_netboxid = "ID"
    $name_roomid = "Room"
    $name_sysname = "Sysname"

    $url_category = "/search/devicegroup/$category"
}

uptime {
    $title="Uptimes"
    $description = "Netboxes uptime listed descending"

    $sql = "
        select roomid,
               sysname,
               host(ip),
               catid,
               typeid,
               typename,
               prefixid,
               upsince,
               now() - upsince as uptime
        from netbox
                 join type using (typeid)
                 left join netboxprefix using (netboxid)
    "

    $hide = "typeid,prefixid"

    $name_catid = "Category"
    $name_roomid = "Room"
    $name_sysname = "Name"
    $name_typename = "Type"

    $order_by = "upsince desc"

    $url_catid = "/report/netbox?catid=$catid"
    $url_ip = "/report/prefix?prefixid=$prefixid"
    $url_orgid = "/report/org?orgid=$orgid"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_sysname = "/ipdevinfo/$sysname"
    $url_typename = "/report/type?typeid=$typeid"
}

srv {
    $title = "Servers"
    $description = "Shows monitored servers and related information"

    $sql = "
        select orgid,
               roomid,
               sysname,
               ip,
               catid,
               count(distinct category) as netboxgroups,
               count(serviceid) as services,
               val as function,
               netbox.netboxid,
               netboxprefix.prefixid
        from netbox
                 left join netboxprefix using (netboxid)
                 left join service using (netboxid)
                 left join netboxcategory using (netboxid)
                 left join netboxinfo on (netboxinfo.netboxid = netbox.netboxid and netboxinfo.var = 'function')
        where catid = 'SRV'
        group by roomid, sysname, ip, catid, orgid, val, netbox.netboxid, netbox.ip, prefixid
    "

    $hide = "prefixid"

    $name_catid = "Category"
    $name_function = "Function"
    $name_ip = "IP address"
    $name_netboxgroups = "Groups"
    $name_netboxid = "ID"
    $name_orgid = "Organization"
    $name_roomid = "Room"
    $name_services = "Services"
    $name_sysname = "Sysname"

    $order_by = "roomid"

    $url_catid = "/report/netbox?catid=$catid"
    $url_function = "/report/netbox?function=$function"
    $url_ip = "/report/prefix?prefixid=$prefixid"
    $url_netboxgroups = "/report/netboxinfo?netboxid=$netboxid"
    $url_orgid = "/report/org?orgid=$orgid"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_services = "/report/servicemon?netboxid=$netboxid"
    $url_sysname = "/ipdevinfo/$sysname"
    $url_typeid = "/report/type?typeid=$typeid"
}

servicemon {
    $title = "Services"
    $description = "Shows monitored services and related information"

    $sql = "
        select orgid,
               roomid,
               sysname,
               ip,
               handler,
               version,
               netboxid,
               service.up,
               serviceid,
               netboxprefix.prefixid
        from service
                 left join netbox using (netboxid)
                 left join netboxprefix using (netboxid)
    "

    $hide = "netboxid,prefixid"

    $name_handler = "Handler"
    $name_ip = "IP address"
    $name_orgid = "Organization"
    $name_roomid = "Room"
    $name_serviceid = "ID"
    $name_sysname = "Sysname"
    $name_up = "Up"
    $name_version = "Version"

    $url_ip = "/report/prefix?prefixid=$prefixid"
    $url_orgid = "/report/org?orgid=$orgid"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_sysname = "/ipdevinfo/$sysname"
}

device {
    $title = "Devices"
    $description = "Shows information about devices"

    $sql = "
        (select roomid,
                sysname,
                serial,
                case module.name
                    when null then 'N/A'
                    when '' then 'N/A'
                    else module.name
                    end as module,
                module.moduleid
         from device
                  join module using (deviceid)
                  join netbox using (netboxid)
        )
        union
        (select roomid,
                sysname,
                serial,
                null as module,
                null as moduleid
         from netboxentity ne
                  join netbox using (netboxid)
                  join device using (deviceid)
         where physical_class = 3
           and serial is not null
        )
    "

    $hide = "moduleid"

    $name_module = "Module"
    $name_roomid = "Room"
    $name_serial = "Serial Number"
    $name_sysname = "Sysname"

    $order_by = "roomid,sysname,module,serial"

    $url_module = "/report/modules?moduleid=$moduleid"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_sysname = "/report/netbox?sysname=$sysname"
}

modules {
    $title = "Modules"
    $description = "A overview of modules on netboxes"

    $sql = "
        select netboxid,
               typeid,
               roomid,
               sysname,
               moduleid,
               module.name as mn,
               swport,
               gwport,
               model,
               descr,
               serial,
               sw_ver as software,
               hw_ver as hardware,
               fw_ver as firmware
        from netbox
                 join module using (netboxid)
                 join device on module.deviceid = device.deviceid
                 left join (select moduleid, count(interfaceid) as gwport
                            from interface_gwport
                            group by moduleid) tempaggr1 using (moduleid)
                 left join (select moduleid, count(interfaceid) as swport
                            from interface_swport
                            group by moduleid) tempaggr2 using (moduleid)
    "

    $explain_mn = "Module number"

    $hide = "netboxid,typeid,moduleid"

    $name_gwport = "Router ports"
    $name_swport = "Switch ports"

    $order_by = "roomid,sysname,mn"

    $url_gwport = "/report/gwport?sysname=$sysname&module=$mn"
    $url_model = "/report/modules?model=$model"
    $url_roomid = "/report/room?roomid=$roomid"
    $url_swport = "/report/swport?sysname=$sysname&module=$mn"
    $url_sysname = "/report/netbox?sysname=$sysname"
}

mem {
    $title = "Memory"
    $description = "Memory status on netboxes. This report is outdated"

    $sql = "
        select sysname,
               catid,
               typename,
               memtype,
               device,
               to_char(size, '999G999G999G999') as size,
               to_char(used, '999G999G999G999') as used,
               to_char(size - used, '999G999G999G999') as free,
               to_char((used / (size + 0.0001)) * 100, '999')::int as used_pst
        from netbox
                 join mem using (netboxid)
                 left join type using (typeid)
    "

    $order_by = "sysname,catid,memtype,device"

    $name_used_pst = "used %"

    $url_sysname = "/report/netbox?sysname=$sysname"
    $url_memtype = "/report/mem?memtype=$memtype"
    $url_device = "/report/mem?device=$device"
    $url_typename = "/report/type?typename=$typename"
}

gwport {
    $title = "Router ports"
    $description = "Extended information about router ports"

    $sql = "
        select netbox.sysname,
               interface.ifindex,
               interface.ifname as interface,
               module.module as moduleno,
               module.name as module,
               interface.link,
               interface.speed,
               prefixcount,
               netbox.netboxid,
               interface.interfaceid,
               interface.ifalias as alias,
               n2.sysname as otherbox,
               i2.ifname as remoteif
        from interface_gwport as interface
                 join netbox using (netboxid)
                 join (select interfaceid, count(prefixid) as prefixcount
                       from gwportprefix
                       group by interfaceid) tempaggr1 using (interfaceid)
                 left join module using (moduleid)
                 left join netbox as n2 on (interface.to_netboxid = n2.netboxid)
                 left join interface as i2 on (interface.to_interfaceid = i2.interfaceid)
    "

    $hide = "netboxid,ifindex,interfaceid,moduleno"

    $name_gwip = "IP address"
    $name_interface = "Interface"
    $name_otherbox = "Connected to"
    $name_portname = "Description"
    $name_prefixcount = "#prefix"
    $name_remoteif = "Remote if"
    $name_speed = "Mbps"
    $name_sysname = "Router"

    $order_by = "sysname,ifindex"

    $url_module = "/report/modules?sysname=$sysname&module=$module"
    $url_otherbox = "/report/netbox?sysname=$otherbox"
    $url_prefixcount = "/report/gwip?sysname=$sysname&ifindex=$ifindex"
    $url_remoteif = "/report/swport?sysname=$otherbox&interface=$remoteif"
    $url_sysname = "/report/netbox?sysname=$sysname"
}

gwip {
    $title = "Router port prefixes"
    $description = "Router port prefixes and related information"

    $sql = "
        select sysname,
               ifindex,
               ifname as interface,
               module.name as module,
               speed,
               case
                   when virtual then 'Y'
                   else null
                   end as virtual,
               gwip,
               netaddr as prefix,
               vlan.vlanid,
               vlan.vlan,
               nettype,
               netident,
               ifalias as description,
               interface.netboxid,
               prefix.prefixid
        from interface
                 join gwportprefix using (interfaceid)
                 join prefix on (gwportprefix.prefixid = prefix.prefixid)
                 join netbox using (netboxid)
                 left join module using (moduleid)
                 left join vlan using (vlanid)
        where netbox.catid in ('GW', 'GSW')
    "

    $hide = "netboxid,prefixid,vlanid"

    $name_gwip = "IP address"
    $name_interface = "Router port"
    $name_speed = "Mbps"
    $name_sysname = "Router"

    $order_by = "sysname,ifindex,gwip"

    $url_interface = "/report/gwip?sysname=$sysname&ifindex=$ifindex"
    $url_module = "/report/modules?sysname=$sysname&module=$module"
    $url_prefix = "/report/prefix?prefixid=$prefixid"
    $url_sysname = "/report/netbox?sysname=$sysname"
    $url_vlan = "/report/swporttrunk?vlan=$vlan"
}

prefix {
    $title = "Prefixes"
    $description = "Detailed information about IP ranges/prefixes"

    $sql = "
        select host(netaddr) as netaddr,
               host(netaddr)::inet as network,
               masklen(netaddr::inet) as m,
               case family(netaddr::inet)
                   when 6 then 'IPv6'
                   when 4 then 'IPv4'
                   end as family,
               vlan,
               gwcount,
               nettype,
               netident,
               orgid,
               usageid as usage,
               description,
               active_ip_cnt as act,
               prefix.prefixid,
               vlan.vlanid
        from prefix
                 left join vlan using (vlanid)
                 left join (select gwportprefix.prefixid, count(distinct netboxid) as gwcount
                            from gwportprefix
                                     join interface using (interfaceid)
                                     join netbox using (netboxid)
                            where catid in ('GSW', 'GW')
                            group by gwportprefix.prefixid) tempaggr1 using (prefixid)
                 left join prefix_active_ip_cnt using (prefixid)
    "

    $explain_act = "No of currently active IP addresses"
    $explain_family = "IP address family"
    $explain_gwcount = "No of gateways connected"
    $explain_m = "Mask of subnet"

    $hide = "netaddr,prefixid,vlanid"

    $name_act = "Active IPs"
    $name_m = "Mask"
    $name_orgid = "org"

    $order_by = "network"

    $sum = "act"

    $url_act = "/machinetracker/ip?ip_range=$network/$m&days=-1"
    $url_gwcount = "/report/gwip?vlanid=$vlanid"
    $url_nettype = "/report/prefix?nettype=$nettype"
    $url_orgid = "/report/org?orgid=$orgid"
    $url_usage = "/report/usage?usageid=$usage"
    $url_vlan = "/report/swporttrunk?vlan=$vlan"
}

swport {
    $title = "Switch ports"
    $description = "List of switch ports and related information about them"

    $sql = "
        select local_box.sysname,
               local_interface.ifindex,
               local_interface.ifname as interface,
               local_module.moduleid,
               local_module.module as moduleno,
               local_module.name as module,
               local_interface.baseport as port,
               local_interface.link,
               local_interface.speed,
               local_interface.duplex,
               local_interface.media,
               case when local_interface.trunk then 'Y' else '' end as trunk,
               case when local_interface.trunk then 'see list' else '' end as allowvlan,
               case when vlan.vlan is not null then vlan.vlan else local_interface.vlan end as vlan,
               case when vlan.vlan is not null then 'Y' else '' end as derived,
               local_interface.ifalias as alias,
               remote_box.sysname as to_netboxid,
               remote_interface.ifname as remote_interface,
               local_interface.interfaceid,
               local_box.netboxid as netboxid,
               local_box.catid
        from interface_swport as local_interface
                 join netbox as local_box on (local_interface.netboxid = local_box.netboxid)
                 left join module as local_module using (moduleid)
                 left join netbox as remote_box on (to_netboxid = remote_box.netboxid)
                 left join swportvlan on (local_interface.interfaceid = swportvlan.interfaceid and (trunk = false or trunk is null))
                 left join vlan using (vlanid)
                 left join interface as remote_interface on (local_interface.to_interfaceid = remote_interface.interfaceid)
    "

    $explain_derived = "VLAN derived by topology"
    $explain_Description = "ifAlias or similar description"
    $explain_remote_interface = "Interface on connected netbox"
    $explain_to_netboxid = "Netbox connected"

    $hide = "ifindex,moduleno,port,interfaceid,netboxid,moduleid,catid"

    $name_portname = "Description"
    $name_remote_interface = "Remote if"
    $name_speed = "Mbps"
    $name_sysname = "Switch"
    $name_to_netboxid = "Connected to"

    $order_by = "sysname,moduleno,module,port,ifindex"

    $url_allowvlan = "/report/allowedvlan?interfaceid=$interfaceid"
    $url_interface = "/machinetracker/swp?switch=$sysname&port=$interface"
    $url_module = "/report/modules?sysname=$sysname&mn=$module"
    $url_netboxid = "/report/netbox?netboxid=$netboxid"
    $url_remote_interface = "/report/swport?sysname=$to_netboxid&interface=$remote_interface"
    $url_sysname = "/report/netbox?sysname=$sysname"
    $url_to_netboxid = "/report/netbox?sysname=$to_netboxid"
    $url_trunk = "/report/swporttrunk?interfaceid=$interfaceid"
    $url_vlan = "/report/prefix?vlan=$vlan"
}

allowedvlan {
    $title = "Allowed VLANs on switch port"
    $description = "Allowed VLANs on a switch port"

    $sql = "
        select allowedvlan_both.interfaceid,
               sysname,
               module.name as module,
               ifname as interface,
               allowedvlan
        from allowedvlan_both
                 join interface on (interface.interfaceid = allowedvlan_both.interfaceid2)
                 join netbox using (netboxid)
                 left join module using (moduleid)
    "

    $hide = "interfaceid"
    $order_by = "allowedvlan"

    $url_interface = "/report/swport?sysname=$sysname&interfaceid=$interfaceid"
    $url_sysname = "/report/swport?sysname=$sysname"
}

swporttrunk {
    $title = "Switch ports with trunk ports expanded"
    $description = "Switch ports with trunk ports expanded"

    $sql = "
        select local_box.sysname,
               local_interface.ifindex,
               local_interface.ifname as interface,
               local_module.moduleid,
               local_module.module as moduleno,
               local_module.name as module,
               local_interface.baseport as port,
               local_interface.link,
               local_interface.speed,
               local_interface.duplex,
               local_interface.media,
               case
                   when local_interface.trunk then 'Y'
                   else ''
                   end as trunk,
               vlan.vlanid,
               coalesce(vlan.vlan, local_interface.vlan) as vlan,
               case direction
                   when 'o' then 'Up'
                   when 'n' then 'Down'
                   else 'N/A'
                   end as direction,
               local_interface.ifalias as alias,
               remote_box.sysname as to_netboxid,
               remote_interface.ifname as remote_interface,
               local_interface.interfaceid,
               local_box.netboxid as netboxid,
               local_box.catid
        from interface_swport as local_interface
                 join netbox as local_box on (local_interface.netboxid = local_box.netboxid)
                 left join module as local_module using (moduleid)
                 left join netbox as remote_box on (to_netboxid = remote_box.netboxid)
                 left join swportvlan on (local_interface.interfaceid = swportvlan.interfaceid)
                 left join vlan using (vlanid)
                 left join interface as remote_interface on (local_interface.to_interfaceid = remote_interface.interfaceid)
    "

    $explain_Description = "ifAlias or similar description"
    $explain_remote_interface = "Interface on connected netbox"
    $explain_to_netboxid = "Netbox connected"

    $hide = "moduleno,moduleid,ifindex,interfaceid,netboxid,catid,vlanid"

    $name_alias = "Description"
    $name_remote_interface = "Remote if"
    $name_speed = "Mbps"
    $name_sysname = "Switch"
    $name_to_netboxid = "Connected to"

    $order_by = "sysname,ifindex"

    $url_interface = "/machinetracker/swp?switch=$sysname&module=$module&port=$interface"
    $url_module = "/report/modules?sysname=$sysname&module=$module"
    $url_netboxid = "/report/netbox?netboxid=$netboxid"
    $url_remote_interface = "/report/swport?sysname=$to_netboxid&interface=$remote_interface"
    $url_sysname = "/report/netbox?sysname=$sysname"
    $url_to_netboxid = "/report/netbox?sysname=$to_netboxid"
    $url_trunk = "/report/swporttrunk?interfaceid=$interfaceid"
    $url_vlan = "/report/prefix?vlan=$vlan"
}

room {
    $title = "Rooms"
    $description = "Information about rooms"

    $sql = "
        select locationid,
               roomid,
               descr,
               position,
               position[0] as lat,
               position[1] as lon,
               data,
               count as nb
        from room
                 left join (select roomid, count(netboxid) from netbox group by roomid) as foo using (roomid)
    "

    $explain_devices = "Number of registered IP devices in this room"

    $hide = "lat,lon"

    $name_data = "Attributes"
    $name_descr = "Description"
    $name_locationid = "Location"
    $name_nb = "Devices"
    $name_position = "Position"
    $name_roomid = "Room"

    $order_by = "roomid"

    $url_locationid = "/report/location?locationid=$locationid"
    $url_nb = "/report/netbox?roomid=$roomid"
    $url_position = "http://www.openstreetmap.org/index.html?mlat=$lat&mlon=$lon"
    $url_roomid = "/search/room/$roomid/"
}

location {
    $title = "Locations"
    $description = "Short info about a location; name, number of rooms and a description"

    $sql = "
        select location.parent,
               location.locationid,
               case count(distinct sublocs.locationid)
                   when 0 then null
                   else count(distinct sublocs.locationid)
                   end as sublocations,
               location.descr,
               location.data,
               count(distinct roomid) as rooms
        from location
                 left join location as sublocs on (sublocs.parent = location.locationid)
                 left join room on (location.locationid = room.locationid)
        group by location.locationid, location.descr
    "

    $name_data = "Attributes"
    $name_descr = "Description"
    $name_locationid = "Location"
    $name_parent = "Parent"
    $name_rooms = "Rooms"
    $name_sublocations = "Sub-locations"

    $order_by = "locationid"

    $url_parent = "location?locationid=$parent"
    $url_rooms = "/report/room?locationid=$locationid"
    $url_sublocations = "location?parent=$locationid"
}

type {
    $title = "Types of equipment"
    $description = "List of product models and the numer of IP addresses and modules related to them"

    $sql = "
        select vendorid,
               typename,
               count(distinct netboxid) as ipcount,
               count(moduleid) as modcount,
               typeid,
               type.descr,
               sysobjectid
        from type
                 left join netbox using (typeid)
                 left join module using (netboxid)
        group by type.typename, vendorid, typeid, type.descr, sysobjectid
        having count(netbox) > 0
    "

    $explain_ipcount = "Number of IP addresses related to this type"
    $explain_modcount = "Number of modules related to this type"

    $hide = "typeid"

    $name_descr = "Description"
    $name_ipcount = "Devices"
    $name_modcount = "Modules"
    $name_sysobjectid = "OID"
    $name_typename = "Type"
    $name_vendorid = "Vendor"

    $order_by = "vendorid,typename"

    $url_ipcount = "/report/netbox?typeid=$typeid"
    $url_modcount = "/report/modules?typeid=$typeid"
    $url_vendorid = "/report/vendor?vendorid=$vendorid"
}

vendor {
    $title = "Vendors"
    $description = "List of vendors and the number of IP addresses and modules related to them"

    $sql = "
        select vendorid, count(distinct netboxid) as ipcount, count(moduleid) as modcount
        from module
                 right join netbox using (netboxid)
                 join type using (typeid)
                 right join vendor using (vendorid)
        group by vendorid
        order by vendorid
    "

    $explain_ipcount = "Number of IP addresses related to this vendor"
    $explain_modcount = "Number of modules related to this vendor"

    $name_ipcount = "Devices"
    $name_modcount = "Modules"
    $name_vendorid = "Vendor"

    $url_ipcount = "/report/netbox?vendorid=$vendorid"
    $url_vendorid = "/report/type?vendorid=$vendorid"
}

usage {
    $title = "Usage"
    $description = "List of how many networks different groups of users uses"

    $sql = "
        select usageid, count(prefixid) as netcount, descr
        from usage
                 left join vlan using (usageid)
                 left join prefix using (vlanid)
        group by usageid, descr
    "

    $name_descr = "Description"
    $name_netcount = "Networks"
    $name_usageid = "Usage"

    $order_by = "usageid"

    $url_netcount = "/report/prefix?usage=$usageid"
}

org {
    $title = "Organizations"
    $description = "List of number of networks the different organizational units uses"
    $sql = "
        select orgid,
               count(distinct netbox.netboxid) as boxcount,
               count(distinct prefix.prefixid) as netcount,
               parent,
               descr,
               org.data
        from org
                 left join netbox using (orgid)
                 left join vlan using (orgid)
                 left join prefix using (vlanid)
        group by orgid, parent, descr, org.data
    "

    $name_boxcount = "Devices"
    $name_data = "Attributes"
    $name_descr = "Description"
    $name_netcount = "Prefixes"
    $name_orgid = "Organization"
    $name_parent = "Parent"

    $order_by = "orgid"

    $url_boxcount = "/report/netbox?orgid=$orgid"
    $url_netcount = "/report/prefix?orgid=$orgid"
    $url_parent = "/report/org?parent=$parent"
}

stpblock {
    $title = "STP blocked ports"
    $description = "Lists ports that are blocked by the spanning tree protocol"

    $sql = "
        select swportblocked.vlan, sysname, ifname, baseport, ifindex, link, ifalias as description
        from swportblocked
                 join interface_swport using (interfaceid)
                 join netbox using (netboxid)
        where link = 'y'
    "

    $hide = "baseport,ifindex"

    $order_by = "vlan,sysname,baseport,ifindex"
}

interfaces {
    $title = "Interfaces"
    $description = "The full list of collected interfaces on a device"

    $sql = "
        select sysname,
               ifindex,
               ifname,
               ifdescr,
               case
                   when catid in ('GW', 'GSW') and addr_count > 0 then '3/gw'
                   when addr_count > 0 then '3'
                   when baseport is not null then '2'
                   else 'N/A'
                   end as layer,
               iftype,
               ifphysaddress as mac,
               moduleid,
               module as moduleno,
               name as module,
               case ifadminstatus
                   when 1 then 'up'
                   when 2 then 'down'
                   when 3 then 'testing'
                   else ifadminstatus::TEXT
                   end as adm,
               case ifoperstatus
                   when 1 then 'up'
                   when 2 then 'down'
                   when 3 then 'testing'
                   when 4 then 'unknown'
                   when 5 then 'dormant'
                   when 6 then 'notPresent'
                   when 7 then 'lowerLayerDown'
                   else ifoperstatus::TEXT
                   end as oper,
               case duplex
                   when 'f' then 'Full'
                   when 'h' then 'Half'
                   else duplex
                   end as duplex,
               speed,
               media,
               ifalias as alias,
               case
                   when gone_since is null then 'yes'
                   else 'Missing since ' || to_char(gone_since, 'YYYY-MM-DD HH24:MI')
                   end as present,
               interfaceid,
               interface.netboxid,
               catid
        from interface
                 join netbox using (netboxid)
                 left join module using (moduleid)
                 left join (select interfaceid, count(gwip) as addr_count
              from gwportprefix
              group by interfaceid) as foo using (interfaceid)
    "

    $explain_alias = "ifAlias / description / portname"

    $hide = "moduleno,interfaceid,netboxid,moduleid,catid"

    $name_adm = "ifAdminStatus"
    $name_alias = "ifAlias"
    $name_duplex = "Duplex"
    $name_ifdescr = "ifDescr"
    $name_ifindex = "ifIndex"
    $name_ifname = "ifName"
    $name_iftype = "ifType"
    $name_layer = "Layer"
    $name_mac = "MAC address"
    $name_media = "Media"
    $name_module = "Module"
    $name_oper = "ifOperStatus"
    $name_present = "Present"
    $name_speed = "Speed"
    $name_sysname = "Sysname"
    $name_to_netboxid = "Neighbor"

    $order_by = "sysname,moduleno,module,ifindex,ifname"

    $url_ifname = "/ipdevinfo/$sysname/interface=$interfaceid"
    $url_module = "/report/modules?sysname=$sysname&mn=$module"
    $url_sysname = "/report/netbox?sysname=$sysname"
}

aggregate {
    $title = "Aggregated interfaces"
    $description = "Interfaces that appear to be aggregates of multiple lower-layer ports, like port- or etherchannels"

    $sql = "
        select sysname,
               ifname,
               ifindex,
               ifdescr,
               case
                   when catid in ('GW', 'GSW') and addr_count > 0 then '3/gw'
                   when addr_count > 0 then '3'
                   when baseport is not null then '2'
                   else 'n/a'
                   end as layer,
               iftype,
               moduleid,
               module as moduleno,
               name as module,
               case ifadminstatus
                   when 1 then 'up'
                   when 2 then 'down'
                   when 3 then 'testing'
                   else ifadminstatus::TEXT
                   end as adm,
               case ifoperstatus
                   when 1 then 'up'
                   when 2 then 'down'
                   when 3 then 'testing'
                   when 4 then 'unknown'
                   when 5 then 'dormant'
                   when 6 then 'notPresent'
                   when 7 then 'lowerLayerDown'
                   else ifoperstatus::TEXT
                   end as oper,
               case duplex
                   when 'f' then 'full'
                   when 'h' then 'half'
                   else duplex
                   end as duplex,
               speed,
               ifalias as alias,
               interfaceid,
               interface.netboxid,
               catid
        from interface
                 join
             netbox using (netboxid)
                 left join
             module using (moduleid)
                 left join
             (select interfaceid, count(gwip) as addr_count
              from gwportprefix
              group by interfaceid) as foo using (interfaceid)
        where interfaceid in (select higher from interface_stack where higher <> lower group by higher having count(*) > 1)
    "

    $explain_alias = "ifAlias / description / portname"

    $hide = "moduleno,interfaceid,ifindex,netboxid,moduleid,catid"

    $name_remote_interface = "Neighbor port"
    $name_speed = "Mbps"
    $name_sysname = "Sysname"
    $name_to_netboxid = "Neighbor"

    $order_by = "sysname,moduleno,module,ifindex,ifname"

    $url_ifname = "/ipdevinfo/$sysname/interface=$interfaceid"
    $url_module = "/report/modules?sysname=$sysname&mn=$module"
    $url_sysname = "/report/netbox?sysname=$sysname"
}

ifstack {
    $title = "Interface stacks"
    $description = "Interfaces that are stacked in conceptual layers"

    $sql = "
        select sysname,
               h.interfaceid as h_id,
               h.ifindex as h_ifindex,
               h.ifname as higher,
               h.ifalias as high_alias,
               l.interfaceid as l_id,
               l.ifindex as l_ifindex,
               l.ifname as lower,
               l.ifalias as low_alias
        from interface_stack ifs
                 join interface h on (ifs.higher = h.interfaceid)
                 join interface l on (ifs.lower = l.interfaceid)
                 join netbox on (h.netboxid = netbox.netboxid)
    "

    $explain_high_alias = "ifAlias / description / portname"
    $explain_low_alias = "ifAlias / description / portname"

    $hide = "h_ifindex,h_id,l_ifindex,l_id"

    $name_higher = "Higher"
    $name_high_alias = "Higher alias"
    $name_lower = "Lower"
    $name_low_alias = "Lower alias"
    $name_sysname = "Sysname"

    $order_by = "sysname,h_ifindex,l_ifindex"

    $url_higher = "/ipdevinfo/$sysname/interface=$h_id"
    $url_lower = "/ipdevinfo/$sysname/interface=$l_id"
    $url_sysname = "/ipdevinfo/$sysname/"
}

unrecognized_neighbors {
    $title = "Unrecognized neighbors"
    $description = "Discovered neighbor devices that aren't known/monitored by NAV"

    $sql = "
        select sysname,
               interfaceid,
               ifname,
               ifindex,
               remote_id,
               remote_name,
               source,
               date_trunc('second', since) as since
        from unrecognized_neighbor
                 join netbox using (netboxid)
                 join interface using (interfaceid)
    "

    $explain_remote_id = "Identifier of unrecognized neighbor"
    $explain_remote_name = "Name of unrecognized neighbor"
    $explain_source = "Discovery protocol that reported this neighbor"

    $hide = "interfaceid,ifindex"

    $name_ifname = "Interface"
    $name_remote_id = "Remote ID"
    $name_remote_name = "Remote name"
    $name_since = "Seen since"
    $name_sysname = "Reported by"

    $order_by = "sysname,ifindex,remote_id"

    $url_ifname = "/ipdevinfo/$sysname/interface=$interfaceid"
    $url_remote_id = "/ipdevinfo/?query=$remote_id"
    $url_remote_name = "/ipdevinfo/?query=$remote_name"
    $url_sysname = "/ipdevinfo/$sysname"
}

duplexmismatch {
    $title = "Duplex mismatch"
    $description = "Lists duplex mismatches on connected switch ports"

    $sql = "
        select n1.sysname as sysname1,
               s1.interface as interface1,
               case s1.duplex
                   when 'h' then 'Half'
                   when 'f' then 'Full'
                   else 'N/A'
                   end as duplex1,
               case s2.duplex
                   when 'h' then 'Half'
                   when 'f' then 'Full'
                   else 'N/A'
                   end as duplex2,
               s2.interface as interface2,
               n2.sysname as sysname2
        from swport s1
                 join swport s2 on (s1.to_swportid = s2.swportid and s1.duplex <> s2.duplex)
                 join module m1 on (s1.moduleid = m1.moduleid)
                 join netbox n1 on (m1.netboxid = n1.netboxid)
                 join module m2 on (s2.moduleid = m2.moduleid)
                 join netbox n2 on (m2.netboxid = n2.netboxid)
    "

    $name_duplex1 = "Duplex1"
    $name_duplex2 = "Duplex2"
    $name_interface1 = "Interface1"
    $name_interface2 = "Interface2"
    $name_sysname1 = "Sysname1"
    $name_sysname2 = "Sysname2"

    $order_by = "sysname1"

    $url_sysname1 = "/report/netbox?sysname=$sysname1"
    $url_sysname2 = "/report/netbox?sysname=$sysname2"
}

availability_month {
    $title = "Availability last month"
    $description = "Availability and downtime summary for the last month"

    $sql = "
        select netboxid,
               sysname,
               sum(downtime) as downtime_sum,
               count(alerthistid) as downperiod_count,
               (1 - (extract(epoch from sum(downtime)) / extract(epoch from (global_end - global_start)))) * 100 as availability_pct,
               global_start::date as from_date
        from (select alerthistid,
                     netbox.netboxid,
                     sysname,
                     global_start,
                     global_end,
                     least(end_time, global_end) - greatest(start_time, global_start) as downtime
              from alerthist ah
                       join (select now() - interval '1 month' as global_start,
                                    now() as global_end) as timeslot on (ah.start_time, ah.end_time) overlaps (timeslot.global_start, timeslot.global_end)
                       join netbox using (netboxid)
              where eventtypeid = 'boxState'
                and end_time is not null
                and alerttypeid = (select alerttypeid from alerttype where alerttype = 'boxDown')
              order by sysname,
                       alerthistid
             ) as downtime
        group by netboxid, sysname, global_start, global_end
    "

    $hide="netboxid,from_date"

    $name_availability_pct = "% available"
    $name_downperiod_count = "Incidents"
    $name_downtime_sum = "Total downtime"
    $name_sysname = "Sysname"

    $order_by = "downtime_sum desc"

    $url_downperiod_count = "/devicehistory/history/?from_date=$from_date&amp;netbox=$netboxid"
    $url_sysname = "/ipdevinfo/$sysname"
}

topology_candidates {
    $title = "Direct neighborship candidates"
    $description = "Candidates for direct neighborship, evaluated during topology derivation"

    $sql = "
        select frombox.sysname as from_device,
               fromport.ifname as from_interface,
               source,
               tobox.sysname as to_device,
               toport.ifname as to_interface,
               case toportbox.netboxid = tobox.netboxid
                   when true then null
                   else toportbox.sysname
                   end as control
        from adjacency_candidate as ac
                 join netbox frombox on (ac.netboxid = frombox.netboxid)
                 join interface fromport on (ac.interfaceid = fromport.interfaceid)
                 join netbox tobox on (ac.to_netboxid = tobox.netboxid)
                 left join interface toport on (ac.to_interfaceid = toport.interfaceid)
                 left join netbox toportbox on (toport.netboxid = toportbox.netboxid)
        order by from_device, fromport.ifindex, source, to_device, to_interface
    "

    $explain_control = "This column should be empty, or something is wrong with the topology system"

    $name_control = "Control"
    $name_from_device = "Sysname"
    $name_from_interface = "Interface"
    $name_source = "Source"
    $name_to_device = "Candidate neighbor"
    $name_to_interface = "Candidate neighbor port"

    $url_from_device = "/ipdevinfo/$from_device"
    $url_from_interface = "/ipdevinfo/$from_device/ifname=$from_interface"
    $url_to_device = "/ipdevinfo/$to_device"
    $url_to_interface = "/ipdevinfo/$to_device/ifname=$to_interface"
}

offline_devices {
    $title = "Offline devices"
    $description = "These are devices that have been shelved, but are known to NAV"

    $sql = "
        select serial,
               coalesce(to_char(discovered, 'YYYY-MM-DD HH24:MI:SS'), 'N/A') as firstseen,
               hw_ver,
               fw_ver,
               sw_ver,
               coalesce(discovered, '1970-01-01 00:00:00'::timestamp) as discovered
        from device
        where serial is not null
          and serial <> ''
          and deviceid not in (select ne.deviceid
                               from netboxentity ne
                               where ne.deviceid is not null
                               union
                               select m.deviceid
                               from module m
                               where m.deviceid is not null)
        order by discovered desc
    "

    $hide = "discovered"
    $name_firstseen = "First seen by NAV"

    $name_fw_ver = "FW version"
    $name_hw_ver = "HW version"
    $name_serial = "Serial #"
    $name_sw_ver = "SW version"
}

lastupdated {
    $title = "Last ipdevpoll update timestamps"
    $description = "Shows when the last ipdevpoll job ran for each device"

    $sql = "
        select sysname, foo.*
        from netbox
                 left join (select job_name as job,
                                   date_trunc('second', age(now(), end_time)) as age,
                                   date_trunc('second', end_time::timestamp without time zone) as last_updated,
                                   case
                                       when end_time is null then 'N/A'
                                       when success then 'Success'
                                       else 'Failed'
                                       end as job_status,
                                   case
                                       when now() > (end_time + interval * interval '1 second')
                                           then 'Yes'
                                       else null
                                       end as overdue,
                                   case up when 'y' then 'Up' else 'Down' end as box_status,
                                   case
                                       when (select count(*) = 0
                                             from alerthist
                                             where eventtypeid = 'snmpAgentState'
                                               and end_time >= 'infinity'
                                               and alerthist.netboxid = netbox.netboxid)
                                           then 'OK'
                                       else 'Fail' end as snmp_status,
                                   netboxid
                            from ipdevpoll_job_log as ijl
                                     join netbox using (netboxid)
                                     join (select netboxid,
                                                  job_name,
                                                  max(end_time) as end_time
                                           from ipdevpoll_job_log
                                           group by netboxid, job_name) as latestjobs
                                          using (netboxid, job_name, end_time)
        ) as foo using (netboxid)
    "

    $name_age = "Age"
    $name_box_status  = "Up"
    $name_job = "Job"
    $name_job_status = "Job status"
    $name_last_updated = "Last updated"
    $name_netboxid = "ID"
    $name_overdue = "Overdue"
    $name_snmp_status = "SNMP"
    $name_sysname = "Sysname"

    $order_by = "age desc"

    $url_sysname = "/ipdevinfo/$sysname"
}

cisco_serials {
    $title = "Cisco chassis/module serial numbers decoded"
    $description = "This report attempts to decode production date from Cisco serial numbers"

    $sql = "
        select orgid,
               sysname,
               case
                   when physical_class = 3 then 'Chassis'
                   when physical_class = 9 then 'Module'
                   else null
                   end as kind,
               model_name as model,
               serial,
               substr(serial, 4, 2)::int + 1996 as prod_year,
               substr(serial, 6, 2) as prod_week,
               to_char(case
                           when physical_class = 3
                               then coalesce(d.discovered, netbox.discovered)
                           else d.discovered
                           end, 'YYYY-MM-DD HH24:MI:SS') as discovered
        from netboxentity ne
                 join device d on (d.deviceid = ne.deviceid)
                 join netbox using (netboxid)
        where vendor_type like '.1.3.6.1.4.1.9.%'
          and physical_class in (3, 9)
          and serial ~* '^[a-z]{3}[a-z,0-9]{8}$'
    "
    $name_discovered = "First seen"
    $name_kind = "Kind"
    $name_model = "Model"
    $name_orgid = "Organization"
    $name_prod_week = "Week"
    $name_prod_year = "Year"
    $name_serial = "Serial"
    $name_sysname = "Sysname"

    $order_by = "prod_year, prod_week, sysname"

    $url_sysname = "/ipdevinfo/$sysname"
}

chassis_models {
    $title = "IP Device SNMP types and chassis models"
    $description = "Comparative listing of SNMP agent types and chassis model names for all IP devices"

    $sql = "
        select sysname, vendorid, typename, model_name as model, serial
        from netbox
                 left join type using (typeid)
                 left join netboxentity ne on (ne.netboxid = netbox.netboxid and physical_class = 3)
                 left join device on (ne.deviceid = device.deviceid)
    "

    $name_model = "Chassis model"
    $name_serial = "Chassis serial"
    $name_sysname = "Sysname"
    $name_typename = "Type"
    $name_vendorid = "Vendor"

    $order_by = "sysname"

    $url_model = "chassis_models?model=$model"
    $url_sysname = "/ipdevinfo/$sysname"
    $url_typename = "chassis_models?typename=$typename"
    $url_vendorid = "chassis_models?vendorid=$vendorid"
}

bgp {
    $title = "BGP peering sessions"

    $sql = "
        select sysname,
               peer,
               initcap(state) as state,
               initcap(adminstatus) as admin_status,
               local_as,
               remote_as,
               local_as = remote_as as ibgp,
               to_char(last_state_change, 'YYYY-MM-DD HH24:MI:SS') as last_state_change
        from peersession
                 join netbox using (netboxid)
        where protocol = 1
    "

    $name_admin_status = "Admin status"
    $name_ibgp = "iBGP"
    $name_last_state_change = "Last changes"
    $name_local_as = "Local AS"
    $name_peer = "Peer"
    $name_remote_as = "Remote AS"
    $name_state = "State"
    $name_sysname = "Sysname"

    $order_by = "sysname, peer"

    $url_ibgp = "bgp?ibgp=$ibgp"
    $url_local_as = "bgp?local_as=$local_as"
    $url_peer = "/ipdevinfo/ip=$peer/"
    $url_remote_as = "bgp?remote_as=$remote_as"
    $url_sysname = "/ipdevinfo/$sysname"
}
